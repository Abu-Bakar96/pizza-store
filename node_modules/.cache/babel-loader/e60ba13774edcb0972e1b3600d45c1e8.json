{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  totalPrice: 0,\n  items: localStorage.getItem('')\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload.id);\n\n      if (findItem) {\n        findItem.count++;\n      } else {\n        state.items.push({ ...action.payload,\n          count: 1\n        });\n      }\n\n      state.totalPrice = state.items.reduce((sum, obj) => {\n        return obj.price * obj.count + sum;\n      }, 0);\n    },\n\n    minusItem(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload);\n\n      if (findItem) {\n        findItem.count--;\n      }\n    },\n\n    removeItem(state, action) {\n      state.items = state.items.filter(obj => obj.id !== action.payload);\n    },\n\n    clearItems(state, action) {\n      state.items = [];\n      state.totalPrice = 0;\n    }\n\n  }\n});\nexport const selectCart = state => state.cart;\nexport const selectCartItemById = id => state => state.cart.items.find(obj => obj.id === id);\nexport const {\n  addItem,\n  removeItem,\n  clearItems,\n  minusItem\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","totalPrice","items","localStorage","getItem","cartSlice","name","reducers","addItem","state","action","findItem","find","obj","id","payload","count","push","reduce","sum","price","minusItem","removeItem","filter","clearItems","selectCart","cart","selectCartItemById","actions","reducer"],"sources":["/home/admin1/carier week/react-pizza-v2/src/redux/slices/cartSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store\";\n\nexport type CartItem = {\n    id: string;\n    title: string;\n    price: number;\n    imageUrl: string;\n    type: string;\n    size: number;\n    count: number;\n\n}\n\ninterface CartSliceState { \n    totalPrice: number;\n    items: CartItem[]\n}\n\nconst initialState: CartSliceState = {\n    totalPrice: 0,\n    items: localStorage.getItem('')\n};\n\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState,\n    reducers: {\n        addItem(state, action: PayloadAction<CartItem>) {\n\n            const findItem = state.items.find(obj => obj.id === action.payload.id)\n            \n            \n            if (findItem) {\n                findItem.count ++\n            } else {\n                state.items.push({\n                    ...action.payload,\n                    count: 1})\n            }\n\n            state.totalPrice = state.items.reduce((sum,obj) => {\n                        return (obj.price * obj.count) + sum\n                    }, 0)\n\n\n        },\n        minusItem(state, action: PayloadAction<string>) {\n            const findItem = state.items.find(obj => obj.id === action.payload)\n            if (findItem) {\n                findItem.count--\n            }\n        },\n        removeItem(state, action: PayloadAction<String>) {\n            state.items = state.items.filter((obj) => obj.id !== action.payload)\n        },\n        clearItems(state, action) {\n            state.items = []\n            state.totalPrice = 0\n        },\n    },\n})\nexport const selectCart = (state: RootState) => state.cart\nexport const selectCartItemById = (id: string) => (state: RootState) => state.cart.items.find(obj => obj.id === id)\n\nexport const { addItem, removeItem, clearItems, minusItem } = cartSlice.actions\n\nexport default cartSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAmBA,MAAMC,YAA4B,GAAG;EACjCC,UAAU,EAAE,CADqB;EAEjCC,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,EAArB;AAF0B,CAArC;AAKA,MAAMC,SAAS,GAAGN,WAAW,CAAC;EAC1BO,IAAI,EAAE,MADoB;EAE1BN,YAF0B;EAG1BO,QAAQ,EAAE;IACNC,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAyC;MAE5C,MAAMC,QAAQ,GAAGF,KAAK,CAACP,KAAN,CAAYU,IAAZ,CAAiBC,GAAG,IAAIA,GAAG,CAACC,EAAJ,KAAWJ,MAAM,CAACK,OAAP,CAAeD,EAAlD,CAAjB;;MAGA,IAAIH,QAAJ,EAAc;QACVA,QAAQ,CAACK,KAAT;MACH,CAFD,MAEO;QACHP,KAAK,CAACP,KAAN,CAAYe,IAAZ,CAAiB,EACb,GAAGP,MAAM,CAACK,OADG;UAEbC,KAAK,EAAE;QAFM,CAAjB;MAGH;;MAEDP,KAAK,CAACR,UAAN,GAAmBQ,KAAK,CAACP,KAAN,CAAYgB,MAAZ,CAAmB,CAACC,GAAD,EAAKN,GAAL,KAAa;QACvC,OAAQA,GAAG,CAACO,KAAJ,GAAYP,GAAG,CAACG,KAAjB,GAA0BG,GAAjC;MACH,CAFU,EAER,CAFQ,CAAnB;IAKH,CAnBK;;IAoBNE,SAAS,CAACZ,KAAD,EAAQC,MAAR,EAAuC;MAC5C,MAAMC,QAAQ,GAAGF,KAAK,CAACP,KAAN,CAAYU,IAAZ,CAAiBC,GAAG,IAAIA,GAAG,CAACC,EAAJ,KAAWJ,MAAM,CAACK,OAA1C,CAAjB;;MACA,IAAIJ,QAAJ,EAAc;QACVA,QAAQ,CAACK,KAAT;MACH;IACJ,CAzBK;;IA0BNM,UAAU,CAACb,KAAD,EAAQC,MAAR,EAAuC;MAC7CD,KAAK,CAACP,KAAN,GAAcO,KAAK,CAACP,KAAN,CAAYqB,MAAZ,CAAoBV,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWJ,MAAM,CAACK,OAA9C,CAAd;IACH,CA5BK;;IA6BNS,UAAU,CAACf,KAAD,EAAQC,MAAR,EAAgB;MACtBD,KAAK,CAACP,KAAN,GAAc,EAAd;MACAO,KAAK,CAACR,UAAN,GAAmB,CAAnB;IACH;;EAhCK;AAHgB,CAAD,CAA7B;AAsCA,OAAO,MAAMwB,UAAU,GAAIhB,KAAD,IAAsBA,KAAK,CAACiB,IAA/C;AACP,OAAO,MAAMC,kBAAkB,GAAIb,EAAD,IAAiBL,KAAD,IAAsBA,KAAK,CAACiB,IAAN,CAAWxB,KAAX,CAAiBU,IAAjB,CAAsBC,GAAG,IAAIA,GAAG,CAACC,EAAJ,KAAWA,EAAxC,CAAjE;AAEP,OAAO,MAAM;EAAEN,OAAF;EAAWc,UAAX;EAAuBE,UAAvB;EAAmCH;AAAnC,IAAiDhB,SAAS,CAACuB,OAAjE;AAEP,eAAevB,SAAS,CAACwB,OAAzB"},"metadata":{},"sourceType":"module"}