{"ast":null,"code":"var _jsxFileName = \"/home/admin1/carier week/react-pizza-v2/src/pages/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport qs from 'qs';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setCategoryId, setCurrentPage, setFilters } from '../redux/slices/filterSlice';\nimport Categories from '../components/Categories';\nimport Sort from '../components/Sort';\nimport { list } from '../components/Sort';\nimport PizzaBlock from '../components/PizzaBlock';\nimport Skeleton from '../components/PizzaBlock/Skeleton';\nimport Pagination from '../components/Pagination';\nimport { SearchContext } from '../App';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const isSearch = React.useRef(false);\n  const isMounted = React.useRef(false);\n  const items = useSelector(state => state.pizza.items);\n  const {\n    categoryId,\n    sort,\n    currentPage\n  } = useSelector(state => state.filter);\n  const {\n    searchValue\n  } = React.useContext(SearchContext);\n  const [isLoading, setisLoading] = React.useState(true);\n\n  const onChangeCategory = id => {\n    dispatch(setCategoryId(id));\n  };\n\n  const onChangePage = number => {\n    dispatch(setCurrentPage(number));\n  };\n\n  const fetchPizzas = async () => {\n    setisLoading(true);\n    const order = sort.sortProperty.includes('-') ? 'asc' : 'desc';\n    const sortBy = sort.sortProperty.replace('-', '');\n    const category = categoryId > 0 ? `category=${categoryId}` : '';\n    const search = searchValue ? `&search=${searchValue}` : '';\n\n    try {\n      const res = await axios.get(`https://6298dccebf77b60258227c16.mockapi.io/items?page=${currentPage}&limit=4&${category}&sortBy=${sortBy}&order=${order}${search}`);\n      dispa(res.data);\n    } catch (error) {\n      alert('Ошибка при получении пицц');\n    } finally {\n      setisLoading(false);\n    }\n  }; // Если изменили параметры и был первый рендер\n\n\n  React.useEffect(() => {\n    if (isMounted.current) {\n      const queryString = qs.stringify({\n        sortProperty: sort.sortProperty,\n        categoryId,\n        currentPage\n      });\n      navigate(`/?${queryString}`);\n    }\n\n    isMounted.current = true;\n  }, [categoryId, sort.sortProperty, currentPage]); // Если был первый рендер, то проверяем URL-параметры и сохраняем в редуксе\n\n  React.useEffect(() => {\n    if (window.location.search) {\n      const params = qs.parse(window.location.search.substring(1));\n      const sort = list.find(obj => obj.sortProperty === params.sortProperty);\n      dispatch(setFilters({ ...params,\n        sort\n      }));\n      isSearch.current = true;\n    }\n  }, []); // Если был первый рендер, то запрашиваем пиццы \n\n  React.useEffect(() => {\n    window.scrollTo(0, 0);\n\n    if (!isSearch.current) {\n      fetchPizzas();\n    }\n\n    isSearch.current = false;\n  }, [categoryId, sort.sortProperty, searchValue, currentPage]);\n  const skeletons = [...new Array(6)].map((_, index) => /*#__PURE__*/_jsxDEV(Skeleton, {}, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 57\n  }, this));\n  const pizzas = items.map(obj => /*#__PURE__*/_jsxDEV(PizzaBlock, { ...obj\n  }, obj.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 37\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__top\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {\n        value: categoryId,\n        onChangeCategory: onChangeCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sort, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"content__title\",\n      children: \"\\u0412\\u0441\\u0435 \\u043F\\u0438\\u0446\\u0446\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__items\",\n      children: isLoading ? skeletons : pizzas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      onChangePage: onChangePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"3MQFj1vaZinn011j26SWcSS85SI=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","qs","axios","useSelector","useDispatch","setCategoryId","setCurrentPage","setFilters","Categories","Sort","list","PizzaBlock","Skeleton","Pagination","SearchContext","useNavigate","Home","navigate","dispatch","isSearch","useRef","isMounted","items","state","pizza","categoryId","sort","currentPage","filter","searchValue","useContext","isLoading","setisLoading","useState","onChangeCategory","id","onChangePage","number","fetchPizzas","order","sortProperty","includes","sortBy","replace","category","search","res","get","dispa","data","error","alert","useEffect","current","queryString","stringify","window","location","params","parse","substring","find","obj","scrollTo","skeletons","Array","map","_","index","pizzas"],"sources":["/home/admin1/carier week/react-pizza-v2/src/pages/Home.jsx"],"sourcesContent":["import React from 'react'\nimport qs from 'qs'\nimport axios from 'axios'\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { setCategoryId, setCurrentPage, setFilters } from '../redux/slices/filterSlice'\n\n\nimport Categories from '../components/Categories';\nimport Sort from '../components/Sort';\nimport {list} from '../components/Sort';\nimport PizzaBlock from '../components/PizzaBlock';\nimport Skeleton from '../components/PizzaBlock/Skeleton';\nimport Pagination from '../components/Pagination';\nimport { SearchContext } from '../App';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function Home() {\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n  const isSearch = React.useRef(false)\n  const isMounted = React.useRef(false)\n\n  const items = useSelector(state => state.pizza.items)\n\n  const { categoryId, sort, currentPage } = useSelector(state => state.filter)\n\n\n\n  const { searchValue } = React.useContext(SearchContext)\n  const [isLoading, setisLoading] = React.useState(true)\n\n  const onChangeCategory = (id) => {\n    dispatch(setCategoryId(id))\n  }\n\n  const onChangePage = (number) => {\n    dispatch(setCurrentPage(number))\n  }\n\n  const fetchPizzas = async () => {\n    setisLoading(true)\n    const order = sort.sortProperty.includes('-') ? 'asc' : 'desc';\n    const sortBy = sort.sortProperty.replace('-', '')\n    const category = categoryId > 0 ? `category=${categoryId}` : ''\n    const search = searchValue ? `&search=${searchValue}` : ''\n\n    try {\n      const res = await axios.get(`https://6298dccebf77b60258227c16.mockapi.io/items?page=${currentPage}&limit=4&${category}&sortBy=${sortBy}&order=${order}${search}`)\n      dispa(res.data);\n    } catch (error) {\n      alert('Ошибка при получении пицц')\n    } finally {\n      setisLoading(false)\n    }\n    \n  }\n\n  // Если изменили параметры и был первый рендер\n\n  React.useEffect(() => {\n\n    if(isMounted.current) {\n\n      const queryString = qs.stringify({\n        sortProperty: sort.sortProperty,\n        categoryId,\n        currentPage\n  \n      })\n  \n      navigate(`/?${queryString}`)\n\n    }\n    \n    isMounted.current = true\n\n  }, [categoryId, sort.sortProperty, currentPage])\n\n  // Если был первый рендер, то проверяем URL-параметры и сохраняем в редуксе\n  React.useEffect(() => {\n    if (window.location.search) {\n      const params = qs.parse(window.location.search.substring(1))\n      const sort = list.find(obj => obj.sortProperty === params.sortProperty)\n\n\n      dispatch(setFilters({\n        ...params, \n        sort\n      }))\n      isSearch.current = true\n    }\n  },[])\n\n  // Если был первый рендер, то запрашиваем пиццы \n  React.useEffect(() => {\n    window.scrollTo(0, 0)\n    if (!isSearch.current) {\n      fetchPizzas()\n    }\n\n    isSearch.current = false\n\n  }, [categoryId, sort.sortProperty, searchValue, currentPage])\n\n\n\n  const skeletons = [...new Array(6)].map((_, index) => <Skeleton key={index} />)\n\n  const pizzas = items.map((obj) => <PizzaBlock key={obj.id} {...obj} />)\n\n\n  return (\n    <div className=\"container\">\n\n      <div className=\"content__top\">\n        <Categories value={categoryId} onChangeCategory={onChangeCategory} />\n        <Sort />\n\n      </div>\n      <h2 className=\"content__title\">Все пиццы</h2>\n      <div className=\"content__items\">\n\n        {\n          isLoading\n            ? skeletons\n            : pizzas\n        }\n\n\n        {/* {\n          items.map(obj => isLoading ? <Skeleton /> : <PizzaBlock key={obj.id} {...obj} />)\n        } */}\n\n        {/* {\n          pizzas.map(obj => <PizzaBlock title={obj.title} price={obj.price} imageUrl={obj.imageUrl} sizes={obj.sizes} types={obj.types}/>)\n        } */}\n      </div>\n      <Pagination currentPage={currentPage} onChangePage={onChangePage} />\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}